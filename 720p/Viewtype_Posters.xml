<?xml version="1.0" encoding="utf-8"?>
<includes>
    <include name="Viewtype_Posters">
        <control type="group">
            <visible>Control.IsVisible(532)</visible>
            <visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(sets)</visible>
            <animation type="TYPE" condition="Window.IsVisible(2003)" reversible="false">
                <effect type="slide" end="-1500,0" time="200" />
            </animation>
            <animation type="TYPE" condition="!Window.IsVisible(2003)" reversible="false">
                <effect type="slide" start="-1500,0" time="200" />
            </animation>
            <animation type="WindowClose">
                <effect type="fade" time="300" />
                <effect type="slide" end="+1500,0" time="300" />
            </animation>
            <animation type="WindowOpen">
                <effect type="fade" time="300" />
                <effect type="slide" start="+1500,0" time="300" />
            </animation>
            <animation effect="fade" time="300">WindowOpen</animation>
            <animation type="WindowClose">
                <effect type="fade" time="300" />
            </animation>
		    <control type="wraplist" id="532">
                <viewtype label="Poster">Posters View</viewtype>
                <include>PanelCoordinates</include>
                <width>1230</width>
                <height>315</height>
                <scrolltime>200</scrolltime>
                <orientation>horizontal</orientation>
                <onup>9000</onup>
				<onup>Skin.ToggleSetting(showViewOptions)</onup>
				<focus>0</focus>
                <pagecontrol>63</pagecontrol>
                <preloaditems>2</preloaditems>
		        <visible>Container.Content(movies) | Container.Content(tvshows) | Container.Content(sets)</visible>
                <itemlayout width="220" height="315">
					<control type="image">
                        <width>215</width>
                        <height>315</height>
                        <texture>tile.png</texture>
                        <aspectratio scalediffuse="false">stretch</aspectratio>
                        <visible>!String.IsEqual(ListItem.Title, )</visible>
                    </control>
                    <control type="image">
                        <width>215</width>
                        <height>315</height>
                        <texture>$INFO[ListItem.Art(poster)]</texture>
					    <aspectratio scalediffuse="false">scale</aspectratio>
                        <bordersize>5</bordersize>
                        <visible>!String.Contains(ListItem.Icon,default)</visible>
                    </control>
                    <control type="image">
                        <width>215</width>
                        <height>315</height>
                        <texture>$INFO[ListItem.Icon]</texture>
		                <aspectratio scalediffuse="false">keep</aspectratio>
                        <bordersize>5</bordersize>
                        <visible>String.Contains(ListItem.Icon,default)</visible>
                    </control>
					<control type="image">
                        <width>215</width>
                        <height>315</height>
                        <texture>music_fanart_diffuse.png</texture>
					    <aspectratio scalediffuse="false">scale</aspectratio>
                        <bordersize>5</bordersize>
					</control>
                    <control type="image">
                        <left>150</left>
                        <top>5</top>
                        <width>60</width>
                        <height>60</height>
                        <texture>OverlayWatchedPanel.png</texture>
                        <animation type="Focus" reversible="false">
                            <effect type="zoom" center="0,215" start="80" end="120" time="400" tween="back" easing="out" />
                            <effect type="fade" start="80" end="100" time="400" />
                        </animation>
                        <visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
                    </control>
					   <control type="image">
                        <left>150</left>
                        <top>5</top>
                        <width>60</width>
                        <height>60</height>
                        <texture>OverlayWatchingPanel.png</texture>
                        <animation type="Focus" reversible="false">
                            <effect type="zoom" center="0,215" start="80" end="120" time="400" tween="back" easing="out" />
                            <effect type="fade" start="80" end="100" time="400" />
                        </animation>
                        <visible>ListItem.IsResumable + !String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
                    </control>
					<control type="image">
                        <left>135</left>
                        <top>5</top>
                        <width>75</width>
                        <height>75</height>
                        <texture>OverlayNewPanel.png</texture>
                        <animation type="Focus" reversible="false">
                            <effect type="zoom" center="0,215" start="80" end="120" time="400" tween="back" easing="out" />
                            <effect type="fade" start="80" end="100" time="400" />
                        </animation>
                        <visible>!String.IsEqual(ListItem.Overlay,OverlayWatched.png) + [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.Label)]</visible>
                    </control>
					<control type="image">
				<top>250</top>
				<left>5</left>
				<width>60</width>
				<height>60</height>
				<texture>Overlay3DPanel.png</texture>
					<visible>ListItem.IsStereoscopic</visible>
			</control>
			<control type="image">
				<top>250</top>
				<left>5</left>
				<width>60</width>
				<height>60</height>
				<texture>OverlayHDPanel.png</texture>
					<visible>Integer.IsGreater(ListItem.VideoResolution,699) + !ListItem.IsStereoscopic</visible>
			</control>
			
						<control type="image">
				<top>250</top>
				<left>5</left>
				<width>60</width>
				<height>60</height>
				<texture>Overlay4KPanel.png</texture>
				<visible>String.IsEqual(ListItem.VideoResolution,4K) + !ListItem.IsStereoscopic</visible>
			</control>
						
                </itemlayout>
                <focusedlayout width="220" height="315">
					
					<control type="image">
                        <width>215</width>
                        <height>315</height>
                        <texture>button.png</texture>
                        <aspectratio scalediffuse="false">stretch</aspectratio>
                    </control>
					<control type="image">
						<width>215</width>
                        <height>315</height>
                        <texture>tile.png</texture>
                        <aspectratio scalediffuse="false">stretch</aspectratio>
						<bordersize>5</bordersize>
                        <visible>String.IsEqual(ListItem.Label,..)</visible>
                    </control>
					<control type="image">
						<width>215</width>
                        <height>315</height>
                        <texture>$INFO[ListItem.Art(poster)]</texture>
                        <aspectratio scalediffuse="false">scale</aspectratio>
                        <bordersize>5</bordersize>
                        <visible>!String.Contains(ListItem.Icon,default)</visible>
                    </control>
                    <control type="image">
                        <width>215</width>
                        <height>315</height>
                        <texture>$INFO[ListItem.Icon]</texture>
							<aspectratio scalediffuse="false">keep</aspectratio>
						<bordersize>5</bordersize>
                        <visible>String.Contains(ListItem.Icon,default)</visible>
                    </control>
                    <control type="image">
                        <left>150</left>
                        <top>5</top>
                        <width>60</width>
                        <height>60</height>
                        <texture>OverlayWatchedPanel.png</texture>
	                     <visible>String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
                    </control>
                    <control type="image">
                        <left>150</left>
                        <top>5</top>
                        <width>60</width>
                        <height>60</height>
                        <texture>OverlayWatchingPanel.png</texture>
                         <visible>ListItem.IsResumable + !String.IsEqual(ListItem.Overlay,OverlayWatched.png)</visible>
                    </control>
                    <control type="image">
                        <left>135</left>
                        <top>5</top>
                        <width>75</width>
                        <height>75</height>
                        <texture>OverlayNewPanel.png</texture>
                        <visible>!String.IsEqual(ListItem.Overlay,OverlayWatched.png) + [String.IsEqual(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.Label) | String.IsEqual(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.Label)]</visible>
                    </control>
					<control type="image">
				<top>250</top>
				<left>5</left>
				<width>60</width>
				<height>60</height>
				<texture>Overlay3DPanel.png</texture>
					<visible>ListItem.IsStereoscopic</visible>
			</control>
			<control type="image">
				<top>250</top>
				<left>5</left>
				<width>60</width>
				<height>60</height>
				<texture>OverlayHDPanel.png</texture>
					<visible>Integer.IsGreater(ListItem.VideoResolution,699) + !ListItem.IsStereoscopic</visible>
			</control>
			
						<control type="image">
				<top>250</top>
				<left>5</left>
				<width>60</width>
				<height>60</height>
				<texture>Overlay4KPanel.png</texture>
				<visible>String.IsEqual(ListItem.VideoResolution,4K) + !ListItem.IsStereoscopic</visible>
			</control>
					
					
								
                </focusedlayout>
            </control>
			<!-- This control displays the Movie Tv Show or Episode Title on the Top of the Poster Panel-->
			<control type="label" id="140">
                <include>ViewMainTitle</include>
                <label>$INFO[ListItem.Label] [COLOR Accent]$INFO[ListItem.Year][/COLOR]</label>
                <visible>Window.IsActive(1) | Container.Content(movies) | Container.Content(tvshows)</visible>
            </control>
			<!-- Display total seasons, total episodes and unwatched episodes in case unwatched episodes is greater than 0 -->
			<control type="label">
                <include>ViewFooterTitle</include>
                <font>Panel_Title_Footer</font>
				<label>SEASONS [COLOR Accent]$INFO[ListItem.Property(TotalSeasons),,[COLOR White] • [/COLOR]][/COLOR]EPISODES [COLOR Accent]$INFO[ListItem.Property(TotalEpisodes),,[COLOR White] • [/COLOR]][/COLOR]UNWATCHED [COLOR Accent]$INFO[ListItem.Property(UnWatchedEpisodes)][/COLOR]</label>
			    <visible>[Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] + Container.Content(tvshows)</visible>
            </control>
			<!-- Display total seasons, total episodes and last played in case unwatched episodes is 0 -->
			<control type="label">
                <include>ViewFooterTitle</include>
                <font>Panel_Title_Footer</font>
				<label>SEASONS [COLOR Accent]$INFO[ListItem.Property(TotalSeasons),,[COLOR White] • [/COLOR]][/COLOR]EPISODES [COLOR Accent]$INFO[ListItem.Property(TotalEpisodes),,[COLOR White] • [/COLOR]][/COLOR][COLOR Accent]$INFO[ListItem.LastPlayed,[COLOR White][UPPERCASE]$LOCALIZE[568][/UPPERCASE]: [/COLOR]][/COLOR]</label>
			    <visible>Container.Content(tvshows) + String.IsEqual(ListItem.Property(UnWatchedEpisodes),0)</visible>
            </control>
			<!-- This controls displays the tagline of the movie below the Movie Title -->
			<control type="label">
                <include>ViewFooterTitle</include>
                <textcolor>White</textcolor>
                <label>$INFO[ListItem.Tagline]</label>
                <visible>!String.IsEmpty(ListItem.Tagline) + Container.Content(Movies)</visible>
            </control>
            <!-- This controls displays the director of a Movie instead of the tagline, if there is no tagline -->
			<control type="label">
                <include>ViewFooterTitle</include>
                <label>[UPPERCASE][COLOR White]$LOCALIZE[20339][/COLOR]  [COLOR Accent]$INFO[ListItem.Director][/COLOR][/UPPERCASE]</label>
				<visible>String.IsEmpty(ListItem.Tagline) + Container.Content(Movies) + !String.Contains(ListItem.Icon,default) + !String.IsEmpty(ListItem.Director)</visible>
            </control>
            <!-- This controls displays the Duration of the Movie if no director or Tagline are available if the strig "min" is part of the duration-->
			<control type="label">
                <include>ViewFooterTitle</include>
                <label>$INFO[ListItem.Duration]</label>
                <visible>!String.IsEmpty(ListItem.Duration) + String.Contains(ListItem.Duration,$LOCALIZE[31299]) + String.IsEmpty(ListItem.Director) + String.IsEmpty(ListItem.Tagline) + Container.Content(Movies)</visible>
            </control>
            <!-- This controls displays the Duration of the Movie if no director or Tagline are available -->
			<control type="label">
                <include>ViewFooterTitle</include>
                <label>$INFO[ListItem.Duration,, [UPPERCASE]$LOCALIZE[31299][/UPPERCASE]]</label>
                <visible>!String.IsEmpty(ListItem.Duration) + String.IsEmpty(ListItem.Director) + String.IsEmpty(ListItem.Tagline) + Container.Content(Movies)</visible>
            </control>
          

				<!-- Previous Button -->
				<control type="button" id="110">
					<top>635</top>
					<left>10</left>
					<width>60</width>
					<height>60</height>
					<onclick>Control.Move(532,-1)</onclick>
					<texturefocus flipy="true">down_arrow.png</texturefocus>
					<texturenofocus flipy="true">down_arrow.png</texturenofocus>
					<animation effect="rotate" end="90" center="40,680" time="0" condition="true" reversible="false">Conditional</animation>
					<visible>[System.Platform.IOS | System.Platform.Android]  |  [!System.Platform.IOS + !System.Platform.Android + System.getbool(input.enablemouse)]</visible>
				</control>
				<!-- Next Button -->
				<control type="button" id="120">
					<top>635</top>
					<left>1205</left>
					<width>60</width>
					<height>60</height>
					<onclick>Control.Move(532,1)</onclick>
					<texturefocus>down_arrow.png</texturefocus>
					<texturenofocus>down_arrow.png</texturenofocus>
					<animation effect="rotate" end="90" center="1235,680" time="0" condition="true" reversible="false">Conditional</animation>
					<visible>[System.Platform.IOS | System.Platform.Android]  |  [!System.Platform.IOS + !System.Platform.Android + System.getbool(input.enablemouse)]</visible>
				</control>
			
		  
			
        </control>
    </include>
</includes>